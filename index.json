[
    {
        "uri": "/post/cpp-pointers",
        "title": "C++ Pointers (Göstericiler)",
        "content": "Pointer\nKısaca bir hafıza hücresinin ADRESİNİ tutmak için kullanılan değişkenlerdir. Adrsini tuttuğumuz alanda her türlü değişikliği yapabiliriz yani o adresteki veriyi çekebilir veya değiştirebiliriz.\ngösterici olduğunu bildiren işaret: span style=\"color:green\"*/span\n\nTek bir adres 1 byte lik bir alana sahiptir.\n\nKullanımı:\ntür* isim;\n\nÖrnek:\nint dene = 15;\nint deg = 10;\n\nint* po = &dene;\n\nyukarda dene değişkeni için için hafızada 4 byte lik bir alan bulunur ve dene o alana tahsis edilir artık orayı derleyici int olarak kabul eder.\n\nspan style=\"color:green\"int* po/span dediğimizde derleyici int türünden olduğu için hafızada 4 byte lik bir alan arar ve bulduğunda orayı 4 bytlik adres tutan bir alan kabul eder.\n\nspan style=\"color:green\"&/span işareti bir değişkenin soluna konduğunda o değişkenin tutulduğu adresini bize verir ve bu adresi göstericiler tutabilir.\n\nspan style=\"color:green\"&dene/span dediğimiz o değişkenin adresini verir yani:\n\n// çıktısı '0028F960' gibi bir bellek adresi\ncout << &dene;\n\n& işareti olmadan yapsaydık o adrsteki veriyi bize getirecekti yani:\n// çıktısı: 15\ncout << dene;\n\nyukardakini biz göstericimizle göstermek işteseydik:\n// çıktısı: 15\ncout << *po;\n\ngördüğümüz gibi artık po göstericimiz dene değişkeninin adresini tutuyordu yani dene değişkenine istediğini yapar\n\ngelin birde po göstericimizle dene değişkeninin parametresini değiştirelim:\n*po = 256;\n\ncout << \"dene..: \"  << dene << endl; // 256\n\ncout << \"*po..: \" << *po << endl; //256\n\ngördüğümüz gibi dene değişkenin parametresini değiştirdik\n\nhafızada nasıl olduğu:\n\nyukarda derleyici Örnek kodumuz için:\n\nDerlenme yukardan aşağıya olur\nilk önce deneye hafıza adrestlerinden küçükten büyüğe doğru bir tarama yapar ve 4 byte lik uygun bulduğu yere dene değişkenini yerleştir.\nsonra po göstericisine gelir po int türünden bir gösterici olduğu için 4 bytelik bir alana yerleştirir\n\nyukardaki bu yerleştirmeler stack(yığın) hafıza alanında gerçekleşir bu hafıza yerleştirme türü derleyicinin kontrolündedir ilerde daha ayrıntılı anlatacağım stack ve heap hafıza alanlarını\n\nşimdi bir örnek yapalım\nbir fonksiyonla main içindeki 2 değişkeninin parametreleri yer değiştirsin.\ninclude iostream\n\nusing namespace std;\n\n//yer değiştirmeyi yapacak fonksiyonumuz\nvoid degistir(int* a, int* b)\n{\n    // geçici bir değişken oluşturduk ve\n    // a göstericisinin tuttuğu adresteki veriye eşitledik\n    int temp = *a;\n    \n    // b göstericisinin tuttuğu adrsteki degeri a göstericisinin degerine eşitledik\n    *a = *b;\n    \n    // tem içindeki değeri b göstericisine eşitledik\n    *b = temp;\n}\n\nint main()\n{\n    int sayi1 = 15;\n    int sayi2 = 34;\n\n    cout << \":..degistir fonksiyonundan once..:\" << endl;\n    cout << \"sayi1..: \" << sayi1 << endl;\n    cout << \"sayi2..: \" << sayi2 << endl;\n    \n    degistir(&sayi1, &sayi2);\n    \n    cout << \"\\n:..degistir fonksiyonundan sonra..:\" << endl;\n    cout << \"sayi1..: \" << sayi1 << endl;\n    cout << \"sayi2..: \" << sayi2 << endl;\n\n    system(\"PAUSE\");\n    return 0;\n}\n\nyukarda sayi1 in degeri 15 sayi2 nin degeri 34'tü degistri fonksiyonundan sonra sayi1'in degeri 34 sayi2'nin degeri 15 oldu.",
        "tags": [
            "C++"
        ]
    }
]